// Generated by CoffeeScript 1.6.3
(function() {
  var async, error, exec, io, languageConfig, log, print, spawn, _ref;

  print = require('sys').print;

  async = require('async');

  log = console.log, error = console.error;

  print = log;

  _ref = require('child_process'), spawn = _ref.spawn, exec = _ref.exec;

  io = require('socket.io').listen(7777);

  languageConfig = require('../../languageConfig');

  module.exports = function(app, passport) {
    var run;
    run = function(command, socket, cb) {
      var proc;
      cb = cb != null ? cb : function() {};
      proc = exec(command, function(err, stdout, stderr) {
        if (stderr) {
          console.warn(stderr);
        }
        if (!err) {
          return typeof cb === "function" ? cb() : void 0;
        }
      });
      proc.stdout.on('data', function(buffer) {
        return socket.emit('benchmarkStatus', buffer.toString().trim());
      });
      proc.stderr.on('data', function(buffer) {
        return socket.emit('benchmarkStatus', buffer.toString().trim());
      });
      return proc.on('exit', function(status) {
        socket.emit('benchmarkDone', true);
        return cb();
      });
    };
    io.sockets.on('connection', function(socket) {
      return socket.on('benchmark', function(lang) {
        var langConfig;
        console.log('LANG');
        langConfig = languageConfig[lang];
        console.log("Starting " + lang + " server...");
        run("" + langConfig.command + " " + __dirname + "/../../servers/" + lang + "/server." + langConfig.extension, socket);
        console.log('Running benchmark tests...');
        return run("ab -c 100 -n 10000 http://127.0.0.1:" + langConfig.port + "/", socket);
      });
    });
    return app.get('/', function(req, res) {
      return res.render('index', {
        languages: languageConfig
      });
    });
  };

}).call(this);
